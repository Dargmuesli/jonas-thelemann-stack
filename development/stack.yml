secrets:
  postgres_db:
    file: ./secrets/postgres_db.secret
  postgres_password:
    file: ./secrets/postgres_password.secret
  postgres_user:
    file: ./secrets/postgres_user.secret
services:
  1generator:
    deploy:
      labels:
      - traefik.enable=true
      - traefik.frontend.rule=Host:1generator.${STACK_DOMAIN}
      - traefik.port=80
    image: dargmuesli/1generator:1.0.1
  adminer:
    deploy:
      labels:
      - traefik.enable=true
      - traefik.frontend.rule=Host:adminer.${STACK_DOMAIN}
      - traefik.port=8080
      - traefik.frontend.auth.basic=${STACK_AUTH_BASIC}
    image: adminer:4
    volumes:
    - ../production/data/adminer/adminer.css:/var/www/html/adminer.css:ro
  nextcloud:
    env_file: "../production/secrets/nextcloud.env"
    image: nextcloud:15-fpm-alpine
    volumes:
    - nextcloud-data:/var/www/html/
  nextcloud_nginx:
    deploy:
      labels:
      - traefik.enable=true
      - traefik.frontend.rule=Host:nextcloud.${STACK_DOMAIN}
      - traefik.port=80
    image: nginx:1-alpine
    volumes:
    - ../production/data/nginx/nginx.conf:/etc/nginx/nginx.conf
    - nextcloud-data:/var/www/html/
  postgres:
    environment:
      POSTGRES_ADDITIONAL_DBS: randomwinpicker.de
      POSTGRES_DB_FILE: /run/secrets/postgres_db
      POSTGRES_PASSWORD_FILE: /run/secrets/postgres_password
      POSTGRES_USER_FILE: /run/secrets/postgres_user
    image: postgres:11-alpine
    secrets:
    - postgres_db
    - postgres_password
    - postgres_user
    volumes:
    - postgres-data:/var/lib/postgresql/data/
    - ../production/data/postgres/docker-entrypoint-initdb.d/:/docker-entrypoint-initdb.d/:ro
  postgres_backup:
    env_file: ../production/secrets/postgres_backup.env
    environment:
      POSTGRES_PASSWORD_FILE: /run/secrets/postgres_password
    image: prodrigestivill/postgres-backup-local:11-alpine
    secrets:
    # - postgres_db
    - postgres_password
    # - postgres_user
    volumes:
    - ../production/backup/postgres/:/backups/
  randomwinpicker:
    deploy:
      labels:
      - traefik.enable=true
      - traefik.frontend.rule=Host:randomwinpicker.${STACK_DOMAIN}
      - traefik.port=443
      - traefik.protocol=https
    image: dargmuesli/randomwinpicker:4.0.4
    volumes:
    - ../production/secrets/randomwinpicker.env:/var/www/randomwinpicker/credentials/randomwinpicker.env:ro
    - ./certificates/:/etc/ssl/certificates/
  traefik:
    command:
    - --api
    - --defaultentrypoints=http,https
    - --docker
    - --docker.exposedByDefault=false
    - --docker.swarmMode=true
    - --entryPoints=Name:http Address::80 Redirect.EntryPoint:https
    - --entryPoints=Name:https Address::443 TLS:/etc/traefik/acme/jonas-thelemann.crt,/etc/traefik/acme/jonas-thelemann.key
      Compress:true
    - --insecureSkipVerify=true
    deploy:
      labels:
      - traefik.enable=true
      - traefik.frontend.auth.basic=${STACK_AUTH_BASIC}
      - traefik.frontend.rule=Host:traefik.${STACK_DOMAIN}
      - traefik.port=8080
      mode: global
      placement:
        constraints:
        - node.role == manager
    image: traefik:1.7-alpine
    ports:
    - mode: host
      protocol: tcp
      published: 80
      target: 80
    - mode: host
      protocol: tcp
      published: 443
      target: 443
    volumes:
    - /var/run/docker.sock:/var/run/docker.sock
    - ./certificates/:/etc/traefik/acme/
  www:
    deploy:
      labels:
      - traefik.enable=true
      - traefik.port=443
      - traefik.protocol=https
      - traefik.default.frontend.priority=1
      - traefik.default.frontend.rule=Host:${STACK_DOMAIN},www.${STACK_DOMAIN}
      - traefik.auth.frontend.auth.basic=${STACK_AUTH_BASIC}
      - traefik.auth.frontend.priority=2
      - traefik.auth.frontend.rule=Host:${STACK_DOMAIN},www.${STACK_DOMAIN};PathPrefix:/tools/
    image: dargmuesli/jonas-thelemann:2.0.6
    volumes:
    - ../../jonas-thelemann/dist/jonas-thelemann/:/var/www/jonas-thelemann/
    - ../production/secrets/jonas-thelemann.env:/var/www/jonas-thelemann/credentials/jonas-thelemann.env:ro
    - ./certificates/:/etc/ssl/certificates/
version: "3.6"
volumes:
  nextcloud-data: {}
  postgres-data: {}
