secrets:
  codimd_db_url:
    file: ./secrets/codimd/db_url.secret
  codimd_session-secret:
    file: ./secrets/codimd/session-secret.secret
  nextcloud_admin-password:
    file: ./secrets/nextcloud/admin-password.secret
  nextcloud_admin-user:
    file: ./secrets/nextcloud/admin-user.secret
  portainer_admin-password:
    file: ./secrets/portainer/admin-password.secret
  postgres-backup_db:
    file: ./secrets/postgres-backup/db.secret
  postgres_db:
    file: ./secrets/postgres/db.secret
  postgres_password:
    file: ./secrets/postgres/password.secret
  postgres_user:
    file: ./secrets/postgres/user.secret
services:
  1generator:
    deploy:
      labels:
      - traefik.enable=true
      - traefik.http.routers.1generator.middlewares=redirectscheme
      - traefik.http.routers.1generator.rule=Host(`1generator.${STACK_DOMAIN}`)
      - traefik.http.routers.1generator_secure.rule=Host(`1generator.${STACK_DOMAIN}`)
      - traefik.http.routers.1generator_secure.tls.options=mintls13@file #DARGSTACK-REMOVE
      - traefik.http.services.1generator.loadbalancer.server.port=80
    image: dargmuesli/1generator:1.0.1@sha256:6f8dc24e6fc0a254ebe65b0d49f61fdf0749836b91ce1fd3314bbf92ced2b07c
  adminer:
    deploy:
      labels:
      - traefik.enable=true
      - traefik.http.routers.adminer.middlewares=redirectscheme
      - traefik.http.routers.adminer.rule=Host(`adminer.${STACK_DOMAIN}`)
      - traefik.http.routers.adminer_secure.rule=Host(`adminer.${STACK_DOMAIN}`)
      - traefik.http.routers.adminer_secure.tls.options=mintls13@file #DARGSTACK-REMOVE
      - traefik.http.services.adminer.loadbalancer.server.port=8080
    image: adminer:4.7.7-standalone@sha256:5a9667537e96a9774975b632a3ff3d4973fb82492c4679b29e1a30e3509e2ab0
    volumes:
    - ../production/configuration/adminer/adminer.css:/var/www/html/adminer.css:ro
  codimd:
    deploy:
      labels:
      - traefik.enable=true
      - traefik.http.routers.codimd.middlewares=redirectscheme
      - traefik.http.routers.codimd.rule=Host(`codimd.${STACK_DOMAIN}`)
      - traefik.http.routers.codimd_secure.rule=Host(`codimd.${STACK_DOMAIN}`)
      - traefik.http.routers.codimd_secure.tls.options=mintls13@file #DARGSTACK-REMOVE
      - traefik.http.services.codimd.loadbalancer.server.port=3000
    environment:
      CMD_DOMAIN: codimd.${STACK_DOMAIN}
      CMD_PROTOCOL_USESSL: "true"
      CMD_URL_ADDPORT: "false"
    image: quay.io/codimd/server:1.6.0-alpine@sha256:7c8bea26d43326ea089e7bc679b94b00986f47f6923ba0faff568e1e7e8c99dc
    secrets:
    - source: codimd_db_url
      target: dbURL
    - source: codimd_session-secret
      target: sessionsecret
  jonas-thelemann:
    image: dargmuesli/jonas-thelemann:dev
    user: 1000:82
    volumes:
    - ../../jonas-thelemann/dist/jonas-thelemann/server/:/var/www/jonas-thelemann/server/
    - ../production/secrets/jonas-thelemann/jonas-thelemann.env:/var/www/jonas-thelemann/credentials/jonas-thelemann.env:ro
  jonas-thelemann_nginx:
    deploy:
      labels:
      - traefik.enable=true
      - traefik.http.routers.jonas-thelemann_nginx.middlewares=redirectscheme
      - traefik.http.routers.jonas-thelemann_nginx.rule=Host(`${STACK_DOMAIN}`, `www.${STACK_DOMAIN}`)
      - traefik.http.routers.jonas-thelemann_nginx_secure.rule=Host(`${STACK_DOMAIN}`, `www.${STACK_DOMAIN}`)
      - traefik.http.routers.jonas-thelemann_nginx_secure.tls.options=mintls13@file #DARGSTACK-REMOVE
      - traefik.http.routers.jonas-thelemann_nginx_secure_tools.rule=Host(`${STACK_DOMAIN}`, `www.${STACK_DOMAIN}`) && PathPrefix(`/tools/`)
      - traefik.http.routers.jonas-thelemann_nginx_secure_tools.tls.options=mintls13@file #DARGSTACK-REMOVE
      - traefik.http.services.jonas-thelemann_nginx.loadbalancer.server.port=80
    image: nginx:1.19.0-alpine@sha256:ee5a9b68e8d4a4b8b48318ff08ad5489bd1ce52b357bf48c511968a302bc347b
    volumes:
    - ../production/configuration/jonas-thelemann_nginx/nginx.conf:/etc/nginx/nginx.conf
    - ../../jonas-thelemann/dist/jonas-thelemann/server/:/var/www/jonas-thelemann/server/:ro
    - ./certificates/:/etc/ssl/certificates/
  nextcloud:
    env_file: ../production/secrets/nextcloud/nextcloud.env
    image: nextcloud:19.0.0-fpm-alpine@sha256:29c7725063a6bb3a535dc8c15ee7e9663299a7c657afcad0ff974446bc3e30d6
    secrets:
    - nextcloud_admin-password
    - nextcloud_admin-user
    - postgres_password
    - postgres_user
    volumes:
    - nextcloud_data:/var/www/html/
  nextcloud_nginx:
    deploy:
      labels:
      - traefik.enable=true
      - traefik.http.middlewares.nextcloud_nginx_secure_redirectregex_calendar.redirectregex.regex=.*
      - traefik.http.middlewares.nextcloud_nginx_secure_redirectregex_calendar.redirectregex.replacement=https://nextcloud.${STACK_DOMAIN}/apps/calendar/
      - traefik.http.middlewares.nextcloud_nginx_secure_redirectregex_contacts.redirectregex.regex=.*
      - traefik.http.middlewares.nextcloud_nginx_secure_redirectregex_contacts.redirectregex.replacement=https://nextcloud.${STACK_DOMAIN}/apps/contacts/
      - traefik.http.routers.nextcloud_nginx.middlewares=redirectscheme
      - traefik.http.routers.nextcloud_nginx.rule=Host(`nextcloud.${STACK_DOMAIN}`)
      - traefik.http.routers.nextcloud_nginx_secure.rule=Host(`nextcloud.${STACK_DOMAIN}`)
      - traefik.http.routers.nextcloud_nginx_secure.tls.options=mintls13@file #DARGSTACK-REMOVE
      - traefik.http.routers.nextcloud_nginx_secure_calendar.middlewares=nextcloud_nginx_secure_redirectregex_calendar@docker
      - traefik.http.routers.nextcloud_nginx_secure_calendar.rule=Host(`calendar.${STACK_DOMAIN}`)
      - traefik.http.routers.nextcloud_nginx_secure_calendar.tls.options=mintls13@file #DARGSTACK-REMOVE
      - traefik.http.routers.nextcloud_nginx_secure_contacts.middlewares=nextcloud_nginx_secure_redirectregex_contacts@docker
      - traefik.http.routers.nextcloud_nginx_secure_contacts.rule=Host(`contacts.${STACK_DOMAIN}`)
      - traefik.http.routers.nextcloud_nginx_secure_contacts.tls.options=mintls13@file #DARGSTACK-REMOVE
      - traefik.http.services.nextcloud.loadbalancer.server.port=80
    image: nginx:1.19.0-alpine@sha256:ee5a9b68e8d4a4b8b48318ff08ad5489bd1ce52b357bf48c511968a302bc347b
    volumes:
    - ../production/configuration/nextcloud_nginx/nginx.conf:/etc/nginx/nginx.conf
    - nextcloud_data:/var/www/html/
  portainer:
    command: -H tcp://tasks.portainer-agent:9001 --tlsskipverify --admin-password-file '/run/secrets/portainer_admin-password'
    deploy:
      labels:
      - traefik.enable=true
      - traefik.http.routers.portainer.middlewares=redirectscheme
      - traefik.http.routers.portainer.rule=Host(`portainer.${STACK_DOMAIN}`)
      - traefik.http.routers.portainer_secure.rule=Host(`portainer.${STACK_DOMAIN}`)
      - traefik.http.routers.portainer_secure.tls.options=mintls13@file #DARGSTACK-REMOVE
      - traefik.http.services.portainer.loadbalancer.server.port=9000
      mode: replicated
      placement:
        constraints:
        - node.role == manager
      replicas: 1
    image: portainer/portainer:1.24.0@sha256:e879687781d32f7c10440f7b5f67e5e7f2399179af6196c66c76182758b76299
    secrets:
    - portainer_admin-password
    volumes:
    - portainer_data:/data
  portainer-agent:
    deploy:
      mode: global
      placement:
        constraints:
        - node.platform.os == linux
    environment:
      AGENT_CLUSTER_ADDR: tasks.portainer-agent
    image: portainer/agent:1.6.0@sha256:2f104b7a5f85587948338bf8371ed744c90248ba8dec8fabd79c94f64f8f99d8
    volumes:
    - /var/run/docker.sock:/var/run/docker.sock
    - /var/lib/docker/volumes:/var/lib/docker/volumes
  postgres:
    environment:
      POSTGRES_ADDITIONAL_DBS: codimd randomwinpicker
      POSTGRES_DB_FILE: /run/secrets/postgres_db
      POSTGRES_PASSWORD_FILE: /run/secrets/postgres_password
      POSTGRES_USER_FILE: /run/secrets/postgres_user
    image: postgres:12.3-alpine@sha256:100dd360878282bcfd7f75db79425852ffbb21e5e3cc0284d07fb6e8d0f1217e
    secrets:
    - postgres_db
    - postgres_password
    - postgres_user
    volumes:
    - postgres_data:/var/lib/postgresql/data/
    - ../production/configuration/postgres/docker-entrypoint-initdb.d/:/docker-entrypoint-initdb.d/:ro
  postgres_backup:
    environment:
      POSTGRES_DB_FILE: /run/secrets/postgres-backup_db
      POSTGRES_HOST: postgres
      POSTGRES_PASSWORD_FILE: /run/secrets/postgres_password
      POSTGRES_USER_FILE: /run/secrets/postgres_user
    image: prodrigestivill/postgres-backup-local:12-alpine@sha256:6c5012a9740938368dc99829044e95f847525ed77ddea0bf624eb6bb88d07da8
    secrets:
    - postgres-backup_db
    - postgres_password
    - postgres_user
    volumes:
    - postgres_data:/var/lib/postgresql/data/
    - ../production/backups/postgres/:/backups/
  randomwinpicker:
    image: dargmuesli/randomwinpicker:5.0.7@sha256:3c1800c44d8ab5244ac38abc64e4222043cf5bcd0476c067561d091e6d38671b
    volumes:
    - randomwinpicker_data:/var/www/randomwinpicker/server/
    - ../production/secrets/randomwinpicker/randomwinpicker.env:/var/www/randomwinpicker/credentials/randomwinpicker.env:ro
  randomwinpicker_nginx:
    deploy:
      labels:
      - traefik.enable=true
      - traefik.http.routers.randomwinpicker_nginx.middlewares=redirectscheme
      - traefik.http.routers.randomwinpicker_nginx.rule=Host(`randomwinpicker.${STACK_DOMAIN}`)
      - traefik.http.routers.randomwinpicker_nginx_secure.rule=Host(`randomwinpicker.${STACK_DOMAIN}`)
      - traefik.http.routers.randomwinpicker_nginx_secure.tls.options=mintls13@file #DARGSTACK-REMOVE
      - traefik.http.services.randomwinpicker_nginx.loadbalancer.server.port=80
    image: nginx:1.19.0-alpine@sha256:ee5a9b68e8d4a4b8b48318ff08ad5489bd1ce52b357bf48c511968a302bc347b
    volumes:
    - randomwinpicker_data:/var/www/randomwinpicker/server/:ro
    - ../production/configuration/randomwinpicker_nginx/nginx.conf:/etc/nginx/nginx.conf
    - ./certificates/:/etc/ssl/certificates/
  thelounge:
    deploy:
      labels:
      - traefik.enable=true
      - traefik.http.routers.thelounge.middlewares=redirectscheme
      - traefik.http.routers.thelounge.rule=Host(`thelounge.${STACK_DOMAIN}`)
      - traefik.http.routers.thelounge_secure.rule=Host(`thelounge.${STACK_DOMAIN}`)
      - traefik.http.routers.thelounge_secure.tls.options=mintls13@file #DARGSTACK-REMOVE
      - traefik.http.services.thelounge.loadbalancer.server.port=9000
    image: thelounge/thelounge:4.1.0-alpine@sha256:3bb2d2e063d6cf57d84ccaa550732571055fdc622daf54da9c0c258ec4957861
    volumes:
    - thelounge_data:/var/opt/thelounge
  traefik:
    command:
    - --api=true
    - --entryPoints.web.address=:80
    - --entryPoints.web-secure.address=:443
    - --providers.docker=true
    - --providers.docker.endpoint=unix:///var/run/docker.sock
    - --providers.docker.exposedByDefault=false
    - --providers.docker.swarmMode=true
    - --providers.file.filename=/dynamic.yml #DARGSTACK-REMOVE
    - --providers.file.watch=true #DARGSTACK-REMOVE
    deploy:
      labels:
      - traefik.enable=true
      - traefik.http.middlewares.redirectscheme.redirectscheme.scheme=https
      - traefik.http.routers.traefik.middlewares=redirectscheme
      - traefik.http.routers.traefik.rule=Host(`traefik.${STACK_DOMAIN}`)
      - traefik.http.routers.traefik_secure.rule=Host(`traefik.${STACK_DOMAIN}`)
      - traefik.http.routers.traefik_secure.service=api@internal
      - traefik.http.routers.traefik_secure.tls.options=mintls13@file #DARGSTACK-REMOVE
      - traefik.http.services.traefik.loadbalancer.server.port=8080
      mode: global
      placement:
        constraints:
        - node.role == manager
    image: traefik:2.2.1@sha256:8945fdecf9d6534fd1093b67e11a31f717810b187a93696fd6f496e3fb3b053f
    ports:
    - mode: host
      protocol: tcp
      published: 80
      target: 80
    - mode: host
      protocol: tcp
      published: 443
      target: 443
    volumes:
    - /var/run/docker.sock:/var/run/docker.sock
    - ./certificates/:/etc/traefik/acme/
    - ./configurations/traefik/dynamic.yml:/dynamic.yml:ro #DARGSTACK-REMOVE
version: "3.6"
volumes:
  nextcloud_data: {}
  portainer_data: {}
  postgres_data: {}
  randomwinpicker_data: {}
  thelounge_data: {}
